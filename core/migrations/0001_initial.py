# Generated by Django 5.2.2 on 2025-06-07 21:01

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Exemplar',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('codigo_exemplar', models.CharField(max_length=20, unique=True)),
                ('estado', models.CharField(choices=[('disp', 'Disponível'), ('reservado', 'Reservado'), ('indisp', 'Indisponível')], default='disp', max_length=9)),
            ],
            options={
                'db_table': 'livros',
            },
        ),
        migrations.CreateModel(
            name='LivroBase',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('titulo', models.CharField(max_length=255)),
                ('autor', models.CharField(max_length=255)),
                ('sinopse', models.TextField(blank=True, null=True)),
                ('isbn', models.CharField(blank=True, max_length=20, null=True, unique=True)),
                ('capa_url', models.CharField(blank=True, max_length=255, null=True)),
            ],
            options={
                'db_table': 'livros_base',
            },
        ),
        migrations.CreateModel(
            name='SystemSetting',
            fields=[
                ('chave', models.CharField(max_length=50, primary_key=True, serialize=False)),
                ('valor', models.CharField(max_length=100)),
                ('descricao', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'system_settings',
            },
        ),
        migrations.CreateModel(
            name='Usuario',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('cpf', models.CharField(max_length=11, unique=True, verbose_name='CPF')),
                ('telefone', models.CharField(blank=True, max_length=20, verbose_name='Telefone')),
                ('token_verificacao', models.CharField(blank=True, max_length=64, null=True)),
                ('token_adm', models.CharField(blank=True, max_length=64, null=True)),
                ('bloqueio_ate', models.DateTimeField(blank=True, null=True, verbose_name='Bloqueio até')),
                ('groups', models.ManyToManyField(blank=True, help_text='Grupos de permissões deste usuário.', related_name='core_usuario_set', related_query_name='usuario', to='auth.group', verbose_name='grupos')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Permissões específicas deste usuário.', related_name='core_usuario_perm_set', related_query_name='usuario_perm', to='auth.permission', verbose_name='permissões de usuário')),
            ],
            options={
                'db_table': 'usuarios',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Categoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nome', models.CharField(max_length=100, unique=True)),
                ('descricao', models.TextField(blank=True, null=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.RESTRICT, related_name='subcategories', to='core.categoria')),
            ],
            options={
                'db_table': 'categorias',
            },
        ),
        migrations.CreateModel(
            name='Emprestimo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_retirada', models.DateTimeField(auto_now_add=True)),
                ('data_prevista_devolucao', models.DateTimeField()),
                ('data_devolucao_real', models.DateTimeField(blank=True, null=True)),
                ('status_emprestimo', models.CharField(choices=[('em_uso', 'Em Uso'), ('devolvido', 'Devolvido'), ('atrasado', 'Atrasado')], default='em_uso', max_length=9)),
                ('num_renovacoes', models.PositiveSmallIntegerField(default=0)),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
                ('exemplar', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='core.exemplar')),
            ],
            options={
                'db_table': 'emprestimos',
            },
        ),
        migrations.AddField(
            model_name='exemplar',
            name='livro',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='exemplares', to='core.livrobase'),
        ),
        migrations.CreateModel(
            name='LivroCategoria',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categoria', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='core.categoria')),
                ('livro', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='core.livrobase')),
            ],
            options={
                'db_table': 'livro_categoria',
            },
        ),
        migrations.AddField(
            model_name='livrobase',
            name='categorias',
            field=models.ManyToManyField(through='core.LivroCategoria', to='core.categoria'),
        ),
        migrations.CreateModel(
            name='OperationLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tabela_afetada', models.CharField(max_length=50)),
                ('acao', models.CharField(max_length=50)),
                ('descricao', models.TextField()),
                ('data_hora', models.DateTimeField(auto_now_add=True)),
                ('usuario', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'logs_operacoes',
            },
        ),
        migrations.CreateModel(
            name='PenaltyLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('dias_atraso', models.IntegerField()),
                ('data_aplicacao', models.DateTimeField(auto_now_add=True)),
                ('bloqueio_ate', models.DateTimeField()),
                ('emprestimo', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='core.emprestimo')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'penalty_log',
            },
        ),
        migrations.CreateModel(
            name='ReportRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('mes', models.PositiveSmallIntegerField()),
                ('ano', models.PositiveIntegerField()),
                ('data_geracao', models.DateTimeField(auto_now_add=True)),
                ('arquivo_pdf', models.CharField(max_length=255)),
            ],
            options={
                'db_table': 'report_record',
                'unique_together': {('mes', 'ano')},
            },
        ),
        migrations.CreateModel(
            name='Reserva',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_solicitacao', models.DateTimeField(auto_now_add=True)),
                ('data_agendada', models.DateTimeField()),
                ('status', models.CharField(choices=[('pendente', 'Pendente'), ('aprovada', 'Aprovada'), ('cancelada', 'Cancelada'), ('expirada', 'Expirada')], default='pendente', max_length=9)),
                ('data_confirmacao', models.DateTimeField(blank=True, null=True)),
                ('exemplar', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='core.exemplar')),
                ('usuario', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'reservas',
            },
        ),
        migrations.AddIndex(
            model_name='emprestimo',
            index=models.Index(fields=['exemplar', 'status_emprestimo'], name='emprestimos_exempla_1ad940_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='livrocategoria',
            unique_together={('livro', 'categoria')},
        ),
        migrations.AddIndex(
            model_name='operationlog',
            index=models.Index(fields=['tabela_afetada', 'data_hora'], name='logs_operac_tabela__1af55f_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='reserva',
            unique_together={('exemplar', 'data_agendada')},
        ),
    ]
